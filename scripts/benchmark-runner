#!/usr/bin/env bash
##
## Copyright 2015-2020 Real Logic Limited.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
## https://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##

##
# Example: Invoking `benchmark-runner` from the `scripts/aeron` directory.
#
# $ ../benchmark-runner --output-file "echo-test" --messages "1000, 5000" --burst-size "1, 10" --message-length "16, 200, 1400" "./echo-client"
##

RUNS=5
ITERATIONS=10
NUMBER_OF_MESSAGES=10000
BURST_SIZE=1
MESSAGE_LENGTH=16

while [[ $# -gt 0 ]]
do
  option="$1"
  case ${option} in
    -o|--output-file)
      OUTPUT_FILE_NAME="$2";
      shift
      shift
      ;;
    -m|--messages)
      IFS=',';
      read -ra NUMBER_OF_MESSAGES <<< "$2"
      unset IFS;
      shift
      shift
      ;;
    -b|--burst-size)
      IFS=',';
      read -ra BURST_SIZE <<< "$2"
      unset IFS;
      shift
      shift
      ;;
    -l|--message-length)
      IFS=',';
      read -ra MESSAGE_LENGTH <<< "$2"
      unset IFS;
      shift
      shift
      ;;
    -i|--iterations)
      ITERATIONS="$2";
      shift
      shift
      ;;
    -r|--runs)
      RUNS="$2";
      shift
      shift
      ;;
    -h|--help)
      echo "$0 (-o|--output-file) \"\$output-file-name-prefix\" [(-m|--messages) \"\$number-of-messages-csv\"] [(-b|--burst-size) \"\$burst-size-csv\"] [(-l|--message-length) \"\$message-length-in-bytes-csv\"] [(-i|--iterations) \$iterations] [(-r|--runs) \$runs] \"\$command \$cmdArg1 ...\""
      exit
      ;;
    *)
      COMMAND="$1"
      shift
      ;;
  esac
done

if [ -z "$OUTPUT_FILE_NAME" ];
then
  echo 'Flag -o/--output-file is required'
  exit -1
fi

EXISTING_JVM_OPTS=$JVM_OPTS

for messages in "${NUMBER_OF_MESSAGES[@]}"
do
  for burst in "${BURST_SIZE[@]}"
  do
    for length in "${MESSAGE_LENGTH[@]}"
    do
      for (( r=1; r<=${RUNS}; r++ ))
      do
        echo -e 'Run #'$r' ...\n'

        JVM_OPTS="$EXISTING_JVM_OPTS \
        -Duk.co.real_logic.benchmarks.remote.outputFileNamePrefix=${OUTPUT_FILE_NAME} \
        -Duk.co.real_logic.benchmarks.remote.iterations=${ITERATIONS} \
        -Duk.co.real_logic.benchmarks.remote.messages=${messages# } \
        -Duk.co.real_logic.benchmarks.remote.batchSize=${burst# } \
        -Duk.co.real_logic.benchmarks.remote.messageLength=${length# }" \
         ${COMMAND}
      done
    done
  done
done

JVM_OPTS=$EXISTING_JVM_OPTS